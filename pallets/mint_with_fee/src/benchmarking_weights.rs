
//! Autogenerated weights for `pallet_mint_with_fee`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-05-04, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 1024

// Executed Command:
// ./target/release/parachain-collator
// benchmark
// --dev
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet
// pallet_mint_with_fee
// --extrinsic
// *
// --steps
// 20
// --repeat
// 10
// --output
// ./pallets/mint_with_fee/src/benchmarking_weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_mint_with_fee`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_mint_with_fee::WeightInfo for WeightInfo<T> {
	// Storage: MintWithfee FeePercent (r:1 w:0)
	// Storage: System Account (r:2 w:2)
	fn mint() -> Weight {
		(82_743_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: MintWithfee FeePercent (r:0 w:1)
	fn change_fee_percent() -> Weight {
		(14_531_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}
