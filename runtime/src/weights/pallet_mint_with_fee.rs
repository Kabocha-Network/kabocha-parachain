
//! Autogenerated weights for `pallet_mint_with_fee`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-09-20, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `ubuntu-s-kabocha-01-1627404188468-s-2vcpu-4gb-intel-lon1-01`, CPU: `DO-Regular`
//! EXECUTION: None, WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/parachain-collator
// benchmark
// pallet
// --chain
// dev
// --pallet
// pallet_mint_with_fee
// --extrinsic
// *
// --steps
// 20
// --repeat
// 10
// --output
// runtime/src/weights/pallet_mint_with_fee.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `pallet_mint_with_fee`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_mint_with_fee::WeightInfo for WeightInfo<T> {
	// Storage: MintWithFee FeePercent (r:1 w:0)
	// Storage: System Account (r:2 w:2)
	fn mint() -> Weight {
		Weight::from_ref_time(199_815_000 as u64)
			.saturating_add(T::DbWeight::get().reads(3 as u64))
			.saturating_add(T::DbWeight::get().writes(2 as u64))
	}
	// Storage: MintWithFee FeePercent (r:0 w:1)
	fn change_fee_percent() -> Weight {
		Weight::from_ref_time(73_808_000 as u64)
			.saturating_add(T::DbWeight::get().writes(1 as u64))
	}
}
